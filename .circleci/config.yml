version: 2.1

executors:
  dotnet:
    parameters: &sdk_version
      sdk_version: { type: string, default: "5.0" }
      target_framework: { type: string, default: net5.0 }
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:<< parameters.sdk_version >>-alpine
    working_directory: /project
    environment:
      NUGET_PACKAGES: /project/packages

jobs:
  build:
    executor: dotnet
    steps:
      - checkout
      - run:
          name: print dotnet information
          command: dotnet --info
      - run:
          name: build
          command: dotnet build -c Release --no-incremental -v=normal
      - persist_to_workspace:
          root: .
          paths: ./*

  create_testmaterial:
    parameters: *sdk_version
    executor: dotnet
    steps:
      - attach_workspace:
          at: .
      - run:
          name: create testmaterial
          command: >-
            dotnet publish -c Release --no-build -v=normal UnitTest.ParsecSharp
            -f << parameters.target_framework >>
            --output ./testmaterial<< parameters.sdk_version >>
      - persist_to_workspace:
          root: .
          paths: ./testmaterial<< parameters.sdk_version >>

  unittest:
    parameters: *sdk_version
    executor:
      name: dotnet
      sdk_version: << parameters.sdk_version >>
    steps:
      - attach_workspace:
          at: .
      - run:
          name: run test
          command: >-
            dotnet vstest --logger:"trx;LogFileName=TestResult.xml"
            testmaterial<< parameters.sdk_version >>/UnitTest.ParsecSharp.dll
      - store_artifacts:
          path: ./TestResults/TestResult.xml
          destination: TestResult_<< parameters.target_framework >>.xml

  pack:
    executor: dotnet
    steps:
      - attach_workspace:
          at: .
      - run:
          name: create package
          command: >-
            dotnet pack -c Release --no-build -v=normal ParsecSharp
            --output ./nuget
            -p:RepositoryBranch=${CIRCLE_BRANCH},RepositoryCommit=${CIRCLE_SHA1}
      - store_artifacts:
          path: ./nuget
      - persist_to_workspace:
          root: ./nuget
          paths: ./ParsecSharp.*.symbols.nupkg

  push:
    executor: dotnet
    steps:
      - attach_workspace:
          at: .
      - run:
          name: push to NuGet gallery
          command: >-
            dotnet nuget push ./ParsecSharp.*.symbols.nupkg
            -s https://www.nuget.org -k ${NUGET_APIKEY}

workflows:
  workflow:
    jobs:
      - build:
          filters: &default_filter
            branches:
              only:
                - master
                - dev
            tags:
              only: /^v\d+\.\d+\.\d+(-.+)?$/

      - create_testmaterial:
          name: testmaterial5.0
          requires:
            - build
          filters: *default_filter

      - unittest:
          name: unittest5.0
          requires:
            - testmaterial5.0
          filters: *default_filter

      - create_testmaterial:
          name: testmaterial3.1
          sdk_version: "3.1"
          target_framework: netcoreapp3.1
          requires:
            - build
          filters: *default_filter

      - unittest:
          name: unittest3.1
          sdk_version: "3.1"
          target_framework: netcoreapp3.1
          requires:
            - testmaterial3.1
          filters: *default_filter

      - create_testmaterial:
          name: testmaterial2.1
          sdk_version: "2.1"
          target_framework: netcoreapp2.1
          requires:
            - build
          filters: *default_filter

      - unittest:
          name: unittest2.1
          sdk_version: "2.1"
          target_framework: netcoreapp2.1
          requires:
            - testmaterial2.1
          filters: *default_filter

      - pack:
          requires:
            - build
          filters: *default_filter

      - push:
          context: nuget-publish
          requires:
            - pack
            - unittest5.0
            - unittest3.1
            - unittest2.1
          filters:
            <<: *default_filter
            branches:
              ignore: /.*/
